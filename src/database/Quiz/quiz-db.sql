DROP DATABASE IF EXISTS my_quiz;

CREATE DATABASE IF NOT EXISTS my_quiz;

USE my_quiz;

CREATE TABLE user
(
user_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
first_name VARCHAR(30) NOT NULL,
last_name VARCHAR(30) DEFAULT NULL,
address_id INT UNSIGNED DEFAULT NULL,   -- address table FK
email VARCHAR(50) DEFAULT NULL,
usename VARCHAR(50) NOT NULL,
password VARCHAR(50) NOT NULL,
phone VRACHAR(20) NOT NULL,
notes TEXT DEFAULT NULL,
photo BLOB DEFAULT NULL,
background_photo LONGBLOB DEFAULT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,  -- registered at
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE quiz_invitation
(
invitaion_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id
quiz_id
valid_untill
invitation_date
duration

);

CREATE TABLE quiz
(
quiz_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
quiz_code VARCHAR(20) NOT NULL,   -- uuid
title VARCHAR(100) NOT NULL,
active TINYINT(1) NOT NULL DEFAULT '1',
score INT UNSIGNED NOT NULL,
level  -- depends on the business needs
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE question
(
question_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
quiz_id INT UNSIGNED NOT NULL, -- FK
question_code VARCHAR(20) NOT NULL,   -- uuid
title VARCHAR(300) NOT NULL,
active TINYINT(1) NOT NULL DEFAULT '1',
score INT UNSIGNED NOT NULL,
level ENUM('EASY', 'MEDIUM', 'DIFFECULT') NOT NULL DEFAULT 'MEDIUM',
question_type ENUM('GENERAL', 'YES_NO', 'MULTIPLE_CHOICE') NOT NULL,   -- add more type as required
allowed_time_to_answer -- if required
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE answer
(
answer_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
question_id INT UNSIGNED NOT NULL, -- FK
quiz_id INT UNSIGNED NOT NULL, -- FK   not needed
answer_code VARCHAR(20) NOT NULL,   -- uuid
title VARCHAR(300) NOT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE take
(
take_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
quiz_id INT UNSIGNED NOT NULL,
user_id INT UNSIGNED NOT NULL,
started_at DATETIME NOT NULL,
ended_at DATETIME NOT NULL,
take_code VARCHAR(20) NOT NULL, -- UUID
final_score INT NOT NULL,
final_result ENUM('PASS', 'FAIL', 'UNKNOWN') NOT NULL,
status ENUM('NEW', 'SCHEDULED', 'IN_PROGRESS', 'COMPLETED'),-- if needed
valid_untill
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE take_answer
(
take_answer_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
take_id INT UNSIGNED NOT NULL,
question_id UNSIGNED NOT NULL,
answer_id UNSIGNED NOT NULL,
time_to_answer
correct

created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);