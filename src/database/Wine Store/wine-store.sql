
DROP DATABASE IF EXISTS wine_store;

CREATE DATABASE wine_store;

USE wine_store;


CREATE TABLE category
(
category_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL UNIQUE,
active TINYINT(1) NOT NULL DEFAULT '1',
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE country
(
country_id INTEGER UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL UNIQUE,
last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE region
(
region_id INTEGER UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL,
region_id INT UNSIGNED NOT NULL,
country_id TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE producer
(
producer_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(100) NOT NULL,
region_id INT UNSIGNED NOT NULL, -- should be a region table for normalization
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE bottle
(
bottle_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
full_name VARCHAR(100) NOT NULL,
label VARCHAR(100) NOT NULL,
volume SMALLINT UNSIGNED NOT NULL,
category_id INT UNSIGNED NOT NULL,
producer_id INT UNSIGNED NOT NULL,
year_produced SMALLINT UNSIGNED NOT NULL,
picture BLOB,
price DECIMAL(10, 2) NOT NULL,
alcohol_percentage SMALLINT UNSIGNED NOT NULL,
description VARCHAR(100) DEFAULT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE staff
(
staff_id
name
address_id
join_date
end_date
username
passwd
active

);

CREATE TABLE store
(
id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
store_id INT UNSIGNED NOT NULL,
store_name VARCHAR(50) NOT NULL,
code VRACHAR(50) NOT NULL,  -- code
address_id INT UNSIGNED NOT NULL,
store_manager INT UNSIGNED NOT NULL,
description TEXT,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE inventory      -- bottles per store
(
id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
store_id INT UNSIGNED NOT NULL,
bottle_id INT UNSIGNED NOT NULL,
quantity INT UNSIGNED NOT NULL,
description TEXT,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE supplier
(
supplier_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(60) NOT NULL,
address_id INT UNSIGNED NOT NULL,
description TEXT,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE payment
(
payment_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
payment_type ENUM('CASH', 'CREDIT_CARD', 'PAY_PAL') NOT NULL,
amount DECIMAL(10, 2) NOT NULL,
payment_date DATETIME,
trnsaction_id VARCHAR(100),
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
);

CREATE TABLE order_status
(
status_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
status_name VARCHAR(30) NOT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
CONSTRAINT chk_order_status ( status_name IN ('order placed', 'paid', 'canceled', 'completed', 'sent'))
);

CREATE TABLE order_status_log
(
order_id INT UNSIGNED NOT NULL,
status_id INT UNSIGNED NOT NULL,
date_time DATETIME NOT NULL
);

CREATE TABLE order
(
order_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
store_id INT UNSIGNED NOT NULL,
order_datetime DATETIME,
employee_id INT UNSIGNED NOT NULL,   -- staff_id
order_status_id INT UNSIGNED NOT NULL,
time_paid DATETIME,
time_canceled DATETIME,
time_completed DATETIME,
time_sent DATETIME,
time_delivered DATETIME,
payment_id INT UNSIGNED NOT NULL,
delivery_address VARCHAR(255) NOT NULL,
total_price DECIMAL(10, 2),
notes TEXT,
payment_id INT UNSIGNED NOT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE order_iem
(
id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
order_id INT UNSIGNED NOT NULL,
bottle_id INT UNSIGNED NOT NULL,
quantity INT UNSIGNED NOT NULL DEFAULT '1',
unit_price DECIMAL(10, 2) NOT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE customer
(
customer_id
name
address_id
join_date
end_date
username
passwd
confirmation_code
confirmation_time
active
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE invoice
(
invoice_id
code
store_id
customer_order_id
customer_id
employee_id
invoice_total
time_created
time_due
time_paid
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);



