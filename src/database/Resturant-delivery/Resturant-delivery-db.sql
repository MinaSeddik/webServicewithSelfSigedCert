DROP DATABASE IF EXISTS my_restro;

CREATE DATABASE my_restro;

USE my_restro;

CREATE TABLE user
(
user_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
first_name VARCHAR(30) NOT NULL,
last_name VARCHAR(30) DEFAULT NULL,
address_id INT UNSIGNED DEFAULT NULL,   -- address table FK
email VARCHAR(50) DEFAULT NULL,
usename VARCHAR(50) NOT NULL,
password VARCHAR(50) NOT NULL,
notes TEXT DEFAULT NULL,
photo BLOB DEFAULT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
CONSTRAINT fk_customer_address FOREIGN KEY (address_id) REFERENCES address(address_id) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE resturant
(
resturant_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
resturant_name VARCHAR(50) NOT NULL,
address_id INT UNSIGNED DEFAULT NULL,  -- address table FK
web_site TEXT DEFAULT NULL,
resturant_photo BLOB DEFAULT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE category
(
category_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(50) NOT NULL,
description VARCHAR(100) DEFAULT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE menu_item
(
menu_item_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
resturant_id INT UNSIGNED NOT NULL,     -- FK
category_id INT UNSIGNED NOT NULL,      -- FK
item_name VARCHAR(50) NOT NULL,
item_ingredients VARCHAR(120) DEFAULT NULL,
price DECIMAL(10,2) NOT NULL,    -- to keep price history, create menu_item_price table
is_active TINYINT(1) NOT NULL DEFAULT '1',
item_photo BLOB DEFAULT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE menu_item_offer
(
offer_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
menu_item_id INT UNSIGNED NOT NULL,     -- FK
price DECIMAL(10,2) NOT NULL,
date_start DATE NOT NULL,
date_end DATE NOT NULL,
time_start TIME NOT NULL,
time_end TIME NOT NULL,
item_ingredients VARCHAR(120) DEFAULT NULL,
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE purchase  -- like order
(
purchase_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id   -- FK
resturant_id  -- FK
total_price
payment_type ENUM ...
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE purchase_item  -- like order_item
(
purchase_item_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
menu_item_id   -- FK
quantity
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE resturant_review
(
resturant_id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
user_id   -- FK
rating TINYINT NOT NULL,
title
comment
created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
